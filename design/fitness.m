function [fit, nonVal]=fitness(P, problem, aaa, theta)

popsize = size(P, 1);

g = [];

% g denotes the constraints
% f denotes the objective function

switch problem

    case 1
        %Weld beam design
        % fitness function
        f = 1.10471*P(:,1).^2.*P(:,2)+0.04811*P(:,3).*P(:,4).*(14.0+P(:,2));
        % inequality constraints
        PP = 6000;
        L = 14;
        thetaMax = 0.25;
        E = 30*10^6;
        G = 12*10^6;
        taoMax = 13600;
        roMax = 30000;
        M = PP*(L+P(:,2)/2);
        R = sqrt(((P(:,2).^2)/4+((P(:,1)+P(:,3))/2).^2));
        J = 2*((P(:,1).*P(:,2))/sqrt(2)).*((P(:,2).^2)/12+((P(:,1)+P(:,3))/2).^2);
        taoOne = PP./(sqrt(2)*P(:,1).*P(:,2));
        taoTwo = (M.*R)./J;
        g(:,1) = sqrt(taoOne.^2+(2*taoOne.*taoTwo.*P(:,2))./(2*R)+taoTwo.^2)-taoMax;
        g(:,2) = 6*PP*L./(P(:,4).*P(:,3).^2)-roMax;
        g(:,3) = P(:,1)-P(:,4);
        g(:,4) = 4*PP*L^3./(E*P(:,4).*P(:,3).^3)-thetaMax;
        g(:,5) = PP-(((4.013/6)*(E*G*P(:,3).^2.*P(:,4).^6).^0.5).*(1-P(:,3)*sqrt(E/(4*G))/(2*L)))/(L*L);
        
    case 2
        %Tession compression spring design
        % fitness function
        f = (P(:,3)+2).*P(:,1).*P(:,2).^2;
        % inequality constraints
        g(:,1) = 1-P(:,1).^3.*P(:,3)./(71785*P(:,2).^4);
        g(:,2) = (4*P(:,1).^2-P(:,1).*P(:,2))./(12566*(P(:,1).*P(:,2).^3-P(:,2).^4))+1./(5108*P(:,2).^2)-1;
        g(:,3) = 1-140.45*P(:,2)./(P(:,1).^2.*P(:,3));
        g(:,4) = (P(:,1)+P(:,2))/1.5-1;

    case 3
        %Speed reducer design
        % fitness function
        f =  0.7854*P(:,1).*P(:,2).^2.*(3.3333*P(:,3).^2+14.9334*P(:,3)-43.0934)-1.508*P(:,1).*(P(:,6).^2+P(:,7).^2)+...
7.4777*(P(:,6).^3+P(:,7).^3)+0.7854*(P(:,4).*P(:,6).^2+P(:,5).*P(:,7).^2);
        % inequality constraints
        g(:,1) = 27./(P(:,1).*P(:,2).^2.*P(:,3))-1;
        g(:,2) = 397.5./(P(:,1).*P(:,2).^2.*P(:,3).^2)-1;
        g(:,3) = 1.93*P(:,4).^3./(P(:,2).*P(:,3).*P(:,6).^4)-1;
        g(:,4) = 1.93*P(:,5).^3./(P(:,2).*P(:,3).*P(:,7).^4)-1;
        g(:,5) = sqrt((745*P(:,4)./(P(:,2).*P(:,3))).^2+16.9*10^6)./(110.0*P(:,6).^3)-1;
        g(:,6) = P(:,2).*P(:,3)/40-1;
        g(:,7) = sqrt((745*P(:,5)./(P(:,2).*P(:,3))).^2+157.5*10^6)./(85.0*P(:,7).^3)-1;
        g(:,8) = 5*P(:,2)./P(:,1)-1;
        g(:,9) = P(:,1)./(12*P(:,2))-1;
        g(:,10) = (1.5*P(:,6)+1.9)./P(:,4)-1;
        g(:,11) = (1.1*P(:,7)+1.9)./P(:,5)-1;

    case 4
        %Three-bar truss design
        % fitness function
        f =  100*(2*sqrt(2)*P(:,1)+P(:,2));
        % inequality constraints
        g(:,1) = 2*(sqrt(2)*P(:,1)+P(:,2))./(sqrt(2)*P(:,1).^2+2*P(:,1).*P(:,2))-2;
        g(:,2) = 2*P(:,2)./(sqrt(2)*P(:,1).^2+2*P(:,1).*P(:,2))-2;
        g(:,3) = 2./(P(:,1)+sqrt(2)*P(:,2))-2;
  
    case 5
        %Himmelblau¡¯s Nonlinear Optimization Problem 
        % fitness function 
        f = 5.3578547*P(:, 3).^2+0.8356891*P(:, 1).*P(:, 5)+37.293239*P(:, 1)-40792.141;
        % inequality constraints
        g(:,1) = 85.334407+0.0056858*P(:, 2).*P(:, 5)+0.00026*P(:, 1).*P(:, 4)-0.0022053*P(:, 3).*P(:, 5)-92;
        g(:,2) = -85.334407-0.0056858*P(:, 2).*P(:, 5)-0.00026*P(:, 1).*P(:, 4)+0.0022053*P(:, 3).*P(:, 5);
        g(:,3) = 80.51249+0.0071317*P(:, 2).*P(:, 5)+0.0029955*P(:, 1).*P(:, 2)+0.0021813*P(:, 3).^2-110;
        g(:,4) = -80.51249-0.0071317*P(:, 2).*P(:, 5)-0.0029955*P(:, 1).*P(:, 2)-0.0021813*P(:, 3).^2+90;
        g(:,5) = 9.300961+0.0047026*P(:, 3).*P(:, 5)+0.0012547*P(:, 1).*P(:, 3)+0.0019085*P(:, 3).*P(:, 4)-25;
        g(:,6) = -9.300961-0.0047026*P(:, 3).*P(:, 5)-0.0012547*P(:, 1).*P(:, 3)-0.0019085*P(:, 3).*P(:, 4)+20;
end

% Obtain the fitness
fit = zeros(popsize, 1 + size(g, 2));
fit(:, 1) = f;
fit(:, 2 : (1 + size(g, 2))) = max(0, g);

nonVal = [];
end
